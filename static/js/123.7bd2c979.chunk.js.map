{"version":3,"sources":["views/order/list/All.js"],"names":["Tables","console","log","ability","can","breadCrumbTitle","breadCrumbActive","useDatatable","initialOrder","column","dir","defaultSortField","defaultSortAsc","actions","columns","name","selector","sortable","sortField","minWidth","cell","row","options","dept","className","color","pill","taxed","tax_exempt","price_offer","Number","parseFloat","total","toFixed"],"mappings":"oJAAA,4EA0FeA,UAlFA,WAEX,OADAC,QAAQC,IAAIC,IAAQC,IAAI,OAAQ,sBACzB,eAAC,WAAD,WACH,cAAC,IAAD,CAAaC,gBAAgB,SAASC,iBAAiB,WACvD,cAAC,IAAD,CACIC,aAAcA,IACdC,aAAc,CAACC,OAAQ,KAAMC,IAAK,QAClCC,iBAAkB,SAClBC,gBAAgB,EAEhBC,QAASA,IACTC,QAAS,CACL,CACIC,KAAM,SACNC,SAAU,SACVC,UAAU,EACVC,UAAW,KACXC,SAAU,SAEd,CACIJ,KAAM,WACNC,SAAU,gBACVC,UAAU,EACVC,UAAW,iBACXC,SAAU,SAEd,CACIJ,KAAM,QACNC,SAAU,iBACVC,UAAU,EACVC,UAAW,kBACXC,SAAU,SAEd,CACIJ,KAAM,OACNE,UAAU,EACVE,SAAU,QACVC,KAAM,SAAAC,GAAG,qBACL,sCAEQ,UAAAA,EAAIC,eAAJ,eAAaC,OACb,cAAC,IAAD,CAAOC,UAAU,kBAAkBC,MAAO,kBAAmBC,MAAI,EAAjE,oBAGA,UAAAL,EAAIC,eAAJ,eAAaK,QACb,cAAC,IAAD,CAAOH,UAAU,kBAAkBC,MAAO,kBAAmBC,MAAI,EAAjE,qBAGA,UAACL,EAAIC,eAAL,aAAC,EAAaK,QACd,cAAC,IAAD,CAAOH,UAAU,kBAAkBC,MAAO,kBAAmBC,MAAI,EAAjE,qBAGA,UAAAL,EAAIC,eAAJ,eAAaM,aACb,cAAC,IAAD,CAAOJ,UAAU,kBAAkBC,MAAO,kBAAmBC,MAAI,EAAjE,mBAGA,UAAAL,EAAIC,eAAJ,eAAaO,cACb,cAAC,IAAD,CAAOL,UAAU,kBAAkBC,MAAO,kBAAmBC,MAAI,EAAjE,wBAKhB,CACIX,KAAM,WACNC,SAAU,iBACVE,UAAW,kBACXD,UAAU,EACVE,SAAU,SAEd,CACIJ,KAAM,QACNC,SAAU,QACVC,UAAU,EACVE,SAAU,QACVC,KAAM,SAAAC,GAAG,OAAIS,OAAOC,WAAP,OAAkBV,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAKW,OAAOC,QAAQ","file":"static/js/123.7bd2c979.chunk.js","sourcesContent":["import { Fragment } from 'react'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport Datatable from '@components/datatable'\nimport { useDatatable } from '@data/use-order'\nimport actions from '../actions'\nimport ability from \"../../../configs/acl/ability\"\nimport {Badge} from \"reactstrap\"\n\nconst Tables = () => {\n    console.log(ability.can('read', 'untaxed_list_view'))\n    return <Fragment>\n        <Breadcrumbs breadCrumbTitle='Orders' breadCrumbActive='Orders' />\n        <Datatable\n            useDatatable={useDatatable}\n            initialOrder={{column: 'id', dir: 'desc'}}\n            defaultSortField={'number'}\n            defaultSortAsc={false}\n            // conditions= {!ability.can('read', 'untaxed_list_view') ?  {'options->taxed': true, status: 'COMPLETED' } : { status: 'COMPLETED'}}\n            actions={actions}\n            columns={[\n                {\n                    name: 'Number',\n                    selector: 'number',\n                    sortable: true,\n                    sortField: 'id',\n                    minWidth: '100px'\n                },\n                {\n                    name: 'customer',\n                    selector: 'customer.name',\n                    sortable: true,\n                    sortField: 'customer->name',\n                    minWidth: '100px'\n                },\n                {\n                    name: 'email',\n                    selector: 'customer.email',\n                    sortable: true,\n                    sortField: 'customer->email',\n                    minWidth: '100px'\n                },\n                {\n                    name: 'Info',\n                    sortable: false,\n                    minWidth: '100px',\n                    cell: row => (\n                        <>\n                            {\n                                row.options?.dept &&\n                                <Badge className='text-capitalize' color={'light-secondary'} pill>Zemam</Badge>\n                            }\n                            {\n                                row.options?.taxed &&\n                                <Badge className='text-capitalize' color={'light-secondary'} pill>Taxed</Badge>\n                            }\n                            {\n                                !row.options?.taxed &&\n                                <Badge className='text-capitalize' color={'light-secondary'} pill>Normal</Badge>\n                            }\n                            {\n                                row.options?.tax_exempt &&\n                                <Badge className='text-capitalize' color={'light-secondary'} pill>M3fe</Badge>\n                            }\n                            {\n                                row.options?.price_offer &&\n                                <Badge className='text-capitalize' color={'light-secondary'} pill>Offer</Badge>\n                            }\n                        </>\n                    )\n                },\n                {\n                    name: 'customer',\n                    selector: 'customer.phone',\n                    sortField: 'customer->phone',\n                    sortable: true,\n                    minWidth: '100px'\n                },\n                {\n                    name: 'Total',\n                    selector: 'total',\n                    sortable: true,\n                    minWidth: '100px',\n                    cell: row => Number.parseFloat(row?.total).toFixed(2)\n                }\n            ]}\n        />\n    </Fragment>\n}\n\n\nexport default Tables\n"],"sourceRoot":""}
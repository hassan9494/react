{"version":3,"sources":["@core/components/breadcrumbs/index.js","../node_modules/reactstrap/es/Media.js","views/ui-elements/cards/statistics/StatsCard.js","@core/components/widgets/stats/TinyChartStats.js","views/ui-elements/cards/statistics/OrdersBarChart.js","views/ui-elements/cards/statistics/ProfitLineChart.js","@core/components/widgets/stats/StatsWithAreaChart.js","@core/components/widgets/stats/ChartOptions.js","views/ui-elements/cards/statistics/SubscribersGained.js","views/ui-elements/cards/statistics/RevenueGenerated.js","views/ui-elements/cards/statistics/QuaterlySales.js","views/ui-elements/cards/statistics/OrdersReceived.js","@core/components/widgets/stats/StatsWithLineChart.js","views/ui-elements/cards/statistics/SiteTraffic.js","views/ui-elements/cards/statistics/ActiveUsers.js","views/ui-elements/cards/statistics/Newsletter.js","@core/components/widgets/stats/StatsVertical.js","@core/components/widgets/stats/StatsHorizontal.js","views/ui-elements/cards/statistics/index.js"],"names":["BreadCrumbs","props","breadCrumbTitle","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","breadCrumbActive","right","className","tag","to","active","propTypes","body","PropTypes","bool","bottom","children","node","string","cssModule","object","heading","left","list","middle","tagPropType","top","Media","defaultTag","attributes","_objectWithoutPropertiesLoose","href","src","Tag","classes","mapToCssModules","classNames","media","React","createElement","_extends","StatsCard","cols","data","title","subtitle","color","icon","size","Card","CardHeader","CardTitle","CardText","CardBody","Row","map","item","index","margin","Object","keys","Col","classnames","length","TinyChartStats","stats","options","series","type","height","defaultProps","OrdersBarChart","warning","useState","setData","useEffect","axios","get","then","res","chart","stacked","toolbar","show","grid","padding","plotOptions","bar","horizontal","columnWidth","startingShape","colors","backgroundBarColors","backgroundBarRadius","legend","dataLabels","enabled","xaxis","labels","axisBorder","axisTicks","yaxis","tooltip","x","statistics","ProfitLineChart","info","zoom","borderColor","strokeDashArray","lines","stroke","width","markers","strokeColors","strokeWidth","strokeOpacity","fillOpacity","discrete","seriesIndex","dataPointIndex","fillColor","strokeColor","shape","radius","hover","style","fontSize","StatsWithAreaChart","statTitle","rest","sparkline","curve","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","SubscribersGained","kFormatter","analyticsData","subscribers","RevenueGenerated","success","id","revenue","QuarterlySales","danger","sales","OrdersReceived","orders","StatsWithLineChart","dropShadow","blur","opacity","gradientToColors","SiteTraffic","ActiveUsers","Newsletter","StatsVertical","StatsHorizontal","StatisticsCards","context","useContext","ThemeColors","lg","xs","main","sm","md","xl","QuaterlySales"],"mappings":"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","file":"static/js/136.8e3fa7eb.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive, right } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-9 mb-2'>\n      {/*<div className='content-header-left col-md-9 col-12 mb-2'>*/}\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {\n                  breadCrumbParent &&\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent}\n                  </BreadcrumbItem>\n                }\n                {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      {\n        right ? (\n          <div className='content-header-right text-md-right col-3'>\n            {/*<div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>*/}\n            <div className='form-group breadcrum-right dropdown'>\n              { right }\n              {/*<UncontrolledButtonDropdown>*/}\n              {/*  <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>*/}\n              {/*    <Grid size={14} />*/}\n              {/*  </DropdownToggle>*/}\n              {/*  <DropdownMenu tag='ul' right>*/}\n              {/*    <DropdownItem tag={Link} to='/apps/chat'>*/}\n              {/*      <CheckSquare className='mr-1' size={14} />*/}\n              {/*      <span className='align-middle'>Todo</span>*/}\n              {/*    </DropdownItem>*/}\n              {/*    <DropdownItem tag={Link} to='/apps/chat'>*/}\n              {/*      <MessageSquare className='mr-1' size={14} />*/}\n              {/*      <span className='align-middle'>Chat</span>*/}\n              {/*    </DropdownItem>*/}\n              {/*    <DropdownItem tag={Link} to='/apps/email'>*/}\n              {/*      <Mail className='mr-1' size={14} />*/}\n              {/*      <span className='align-middle'>Email</span>*/}\n              {/*    </DropdownItem>*/}\n              {/*    <DropdownItem tag={Link} to='/apps/calendar'>*/}\n              {/*      <Calendar className='mr-1' size={14} />*/}\n              {/*      <span className='align-middle'>Calendar</span>*/}\n              {/*    </DropdownItem>*/}\n              {/*  </DropdownMenu>*/}\n              {/*</UncontrolledButtonDropdown>*/}\n            </div>\n          </div>\n        ) : ''\n      }\n\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  body: PropTypes.bool,\n  bottom: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  heading: PropTypes.bool,\n  left: PropTypes.bool,\n  list: PropTypes.bool,\n  middle: PropTypes.bool,\n  object: PropTypes.bool,\n  right: PropTypes.bool,\n  tag: tagPropType,\n  top: PropTypes.bool\n};\n\nvar Media = function Media(props) {\n  var body = props.body,\n      bottom = props.bottom,\n      className = props.className,\n      cssModule = props.cssModule,\n      heading = props.heading,\n      left = props.left,\n      list = props.list,\n      middle = props.middle,\n      object = props.object,\n      right = props.right,\n      tag = props.tag,\n      top = props.top,\n      attributes = _objectWithoutPropertiesLoose(props, [\"body\", \"bottom\", \"className\", \"cssModule\", \"heading\", \"left\", \"list\", \"middle\", \"object\", \"right\", \"tag\", \"top\"]);\n\n  var defaultTag;\n\n  if (heading) {\n    defaultTag = 'h4';\n  } else if (attributes.href) {\n    defaultTag = 'a';\n  } else if (attributes.src || object) {\n    defaultTag = 'img';\n  } else if (list) {\n    defaultTag = 'ul';\n  } else {\n    defaultTag = 'div';\n  }\n\n  var Tag = tag || defaultTag;\n  var classes = mapToCssModules(classNames(className, {\n    'media-body': body,\n    'media-heading': heading,\n    'media-left': left,\n    'media-right': right,\n    'media-top': top,\n    'media-bottom': bottom,\n    'media-middle': middle,\n    'media-object': object,\n    'media-list': list,\n    media: !body && !heading && !left && !right && !top && !bottom && !middle && !object && !list\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nMedia.propTypes = propTypes;\nexport default Media;","import classnames from 'classnames'\nimport Avatar from '@components/avatar'\nimport { TrendingUp, User, Box, DollarSign } from 'react-feather'\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, Media } from 'reactstrap'\n\nconst StatsCard = ({ cols }) => {\n  const data = [\n    {\n      title: '230k',\n      subtitle: 'Sales',\n      color: 'light-primary',\n      icon: <TrendingUp size={24} />\n    },\n    {\n      title: '8.549k',\n      subtitle: 'Customers',\n      color: 'light-info',\n      icon: <User size={24} />\n    },\n    {\n      title: '1.423k',\n      subtitle: 'Products',\n      color: 'light-danger',\n      icon: <Box size={24} />\n    },\n    {\n      title: '$9745',\n      subtitle: 'Revenue',\n      color: 'light-success',\n      icon: <DollarSign size={24} />\n    }\n  ]\n\n  const renderData = () => {\n    return data.map((item, index) => {\n      const margin = Object.keys(cols)\n      return (\n        <Col\n          key={index}\n          {...cols}\n          className={classnames({\n            [`mb-2 mb-${margin[0]}-0`]: index !== data.length - 1\n          })}\n        >\n          <Media>\n            <Avatar color={item.color} icon={item.icon} className='mr-2' />\n            <Media className='my-auto' body>\n              <h4 className='font-weight-bolder mb-0'>{item.title}</h4>\n              <CardText className='font-small-3 mb-0'>{item.subtitle}</CardText>\n            </Media>\n          </Media>\n        </Col>\n      )\n    })\n  }\n\n  return (\n    <Card className='card-statistics'>\n      <CardHeader>\n        <CardTitle tag='h4'>Statistics</CardTitle>\n        <CardText className='card-text font-small-2 mr-25 mb-0'>Updated 1 month ago</CardText>\n      </CardHeader>\n      <CardBody className='statistics-body'>\n        <Row>{renderData()}</Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsCard\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport Chart from 'react-apexcharts'\nimport { Card, CardBody } from 'reactstrap'\n\nconst TinyChartStats = props => {\n  // ** Props\n  const { title, stats, options, series, type, height } = props\n\n  return (\n    <Card className='card-tiny-line-stats'>\n      <CardBody className='pb-50'>\n        <h6>{title}</h6>\n        <h2 className='font-weight-bolder mb-1'>{stats}</h2>\n        <Chart options={options} series={series} type={type} height={height} />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default TinyChartStats\n\n// ** PropTypes\nTinyChartStats.propTypes = {\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  options: PropTypes.object.isRequired,\n  series: PropTypes.array.isRequired,\n  type: PropTypes.string.isRequired\n}\n\n// ** Default Props\nTinyChartStats.defaultProps = {\n  height: 100\n}\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\n\nconst OrdersBarChart = ({ warning }) => {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/orders-bar-chart').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      stacked: true,\n      toolbar: {\n        show: false\n      }\n    },\n    grid: {\n      show: false,\n      padding: {\n        left: 0,\n        right: 0,\n        top: -15,\n        bottom: -15\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '20%',\n        startingShape: 'rounded',\n        colors: {\n          backgroundBarColors: ['#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3'],\n          backgroundBarRadius: 5\n        }\n      }\n    },\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    colors: [warning],\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  }\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type='bar'\n      options={options}\n      title={data.title}\n      stats={data.statistics}\n      series={data.series}\n    />\n  ) : null\n}\n\nexport default OrdersBarChart\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\n\nconst ProfitLineChart = ({ info }) => {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/profit-line-chart').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    grid: {\n      borderColor: '#EBEBEB',\n      strokeDashArray: 5,\n      xaxis: {\n        lines: {\n          show: true\n        }\n      },\n      yaxis: {\n        lines: {\n          show: false\n        }\n      },\n      padding: {\n        top: -30,\n        bottom: -10\n      }\n    },\n    stroke: {\n      width: 3\n    },\n    colors: [info],\n    series: [\n      {\n        data: [0, 20, 5, 30, 15, 45]\n      }\n    ],\n    markers: {\n      size: 2,\n      colors: info,\n      strokeColors: info,\n      strokeWidth: 2,\n      strokeOpacity: 1,\n      strokeDashArray: 0,\n      fillOpacity: 1,\n      discrete: [\n        {\n          seriesIndex: 0,\n          dataPointIndex: 5,\n          fillColor: '#ffffff',\n          strokeColor: info,\n          size: 5\n        }\n      ],\n      shape: 'circle',\n      radius: 2,\n      hover: {\n        size: 3\n      }\n    },\n    xaxis: {\n      labels: {\n        show: true,\n        style: {\n          fontSize: '0px'\n        }\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  }\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type='line'\n      options={options}\n      title={data.title}\n      stats={data.statistics}\n      series={data.series}\n    />\n  ) : null\n}\n\nexport default ProfitLineChart\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport Chart from 'react-apexcharts'\nimport { Card, CardBody } from 'reactstrap'\n\n// ** Default Options\nimport { areaChartOptions } from './ChartOptions'\n\nconst StatsWithAreaChart = props => {\n  // ** Props\n  const { icon, color, stats, statTitle, series, options, type, height, className, ...rest } = props\n  return (\n    <Card {...rest}>\n      <CardBody\n        className={classnames('pb-0', {\n          [className]: className\n        })}\n      >\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\n        <h2 className='font-weight-bolder mt-1'>{stats}</h2>\n        <p className='card-text'>{statTitle}</p>\n      </CardBody>\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\n    </Card>\n  )\n}\n\nexport default StatsWithAreaChart\n\n// ** PropTypes\nStatsWithAreaChart.propTypes = {\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  options: PropTypes.object,\n  series: PropTypes.array.isRequired,\n  type: PropTypes.string,\n  height: PropTypes.string,\n  className: PropTypes.string\n}\n\n// ** Default Props\nStatsWithAreaChart.defaultProps = {\n  options: areaChartOptions,\n  color: 'primary'\n}\n","// ** Area Chart Common Options\nexport const areaChartOptions = {\n  chart: {\n    toolbar: {\n      show: false\n    },\n    sparkline: {\n      enabled: true\n    }\n  },\n  grid: {\n    show: false\n  },\n  colors: ['#7367F0'],\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 2.5\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 0.9,\n      opacityFrom: 0.7,\n      opacityTo: 0.5,\n      stops: [0, 80, 100]\n    }\n  },\n  xaxis: {\n    labels: {\n      show: false\n    },\n    axisBorder: {\n      show: false\n    }\n  },\n  yaxis: {\n    labels: {\n      show: false\n    }\n  },\n  tooltip: {\n    x: { show: false }\n  }\n}\n\n// ** Line Chart Common Options\nexport const lineChartOptions = {\n  chart: {\n    toolbar: {\n      show: false\n    },\n    sparkline: {\n      enabled: true\n    },\n    dropShadow: {\n      enabled: true,\n      top: 5,\n      left: 0,\n      blur: 4,\n      opacity: 0.1\n    }\n  },\n  grid: {\n    show: false\n  },\n  colors: ['#7367F0'],\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 5\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 1,\n      gradientToColors: ['#A9A2F6'],\n      opacityFrom: 1,\n      opacityTo: 1,\n      stops: [0, 100, 100, 100]\n    }\n  },\n\n  xaxis: {\n    labels: {\n      show: false\n    },\n    axisBorder: {\n      show: false\n    }\n  },\n  yaxis: {\n    labels: {\n      show: false\n    }\n  },\n  tooltip: {\n    x: { show: false }\n  }\n}\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Users } from 'react-feather'\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst SubscribersGained = ({ kFormatter }) => {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/subscribers').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<Users size={21} />}\n      color='primary'\n      stats={kFormatter(data.analyticsData.subscribers)}\n      statTitle='Subscribers Gained'\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\n\nexport default SubscribersGained\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { CreditCard } from 'react-feather'\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst RevenueGenerated = ({ kFormatter, success }) => {\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [success],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/revenue').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<CreditCard size={21} />}\n      color='success'\n      stats={kFormatter(data.analyticsData.revenue)}\n      statTitle='Revenue Generated'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default RevenueGenerated\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { ShoppingCart } from 'react-feather'\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst QuarterlySales = ({ danger }) => {\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [danger],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/sales').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<ShoppingCart size={21} />}\n      color='danger'\n      stats={data.analyticsData.sales}\n      statTitle='Quarterly Sales'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default QuarterlySales\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Package } from 'react-feather'\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst OrdersReceived = ({ kFormatter, warning }) => {\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [warning],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/orders').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<Package size={21} />}\n      color='warning'\n      stats={kFormatter(data.analyticsData.orders)}\n      statTitle='Orders Received'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default OrdersReceived\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport Chart from 'react-apexcharts'\nimport { Card, CardHeader, CardText } from 'reactstrap'\n\n// ** Default Options\nimport { lineChartOptions } from './ChartOptions'\n\nconst StatsWithLineChart = ({ icon, color, stats, statTitle, series, options, type, height, ...rest }) => {\n  return (\n    <Card {...rest}>\n      <CardHeader className='align-items-start pb-0'>\n        <div>\n          <h2 className='font-weight-bolder'>{stats}</h2>\n          <CardText>{statTitle}</CardText>\n        </div>\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\n      </CardHeader>\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\n    </Card>\n  )\n}\n\nexport default StatsWithLineChart\n\n// ** PropTypes\nStatsWithLineChart.propTypes = {\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  options: PropTypes.object,\n  series: PropTypes.array.isRequired,\n  type: PropTypes.string,\n  height: PropTypes.string\n}\n\n// ** Default Props\nStatsWithLineChart.defaultProps = {\n  options: lineChartOptions,\n  color: 'primary'\n}\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Monitor } from 'react-feather'\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst SiteTraffic = () => {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/site-traffic').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<Monitor size={21} />}\n      color='primary'\n      stats='78.9k'\n      statTitle='Site Traffic'\n      series={data.series}\n      type='line'\n    />\n  ) : null\n}\n\nexport default SiteTraffic\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { UserCheck } from 'react-feather'\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst ActiveUsers = ({ success }) => {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/active-users').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      id: 'activeUsers',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        top: 5,\n        left: 0,\n        blur: 4,\n        opacity: 0.1\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [success],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 1,\n        gradientToColors: ['#55DD92'],\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100, 100, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<UserCheck size={21} />}\n      color='success'\n      stats='659.8k'\n      statTitle='Active Users'\n      series={data.series}\n      options={options}\n      type='line'\n    />\n  ) : null\n}\n\nexport default ActiveUsers\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Mail } from 'react-feather'\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst Newsletter = ({ warning }) => {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/newsletter').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      id: 'newsletter',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        top: 5,\n        left: 0,\n        blur: 4,\n        opacity: 0.1\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [warning],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 1,\n        gradientToColors: ['#ffc085'],\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100, 100, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<Mail size={21} />}\n      color='warning'\n      stats='28.7k'\n      statTitle='Newsletter'\n      series={data.series}\n      type='line'\n      options={options}\n    />\n  ) : null\n}\n\nexport default Newsletter\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsVertical = ({ icon, color, stats, statTitle, className, ...rest }) => {\n  return (\n    <Card className='text-center'>\n      <CardBody className={className}>\n        <div className={`avatar p-50 m-0 mb-1 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n          <div className='avatar-content'>{icon}</div>\n        </div>\n        <h2 className='font-weight-bolder'>{stats}</h2>\n        <p className='card-text line-ellipsis'>{statTitle}</p>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsVertical\n\n// ** PropTypes\nStatsVertical.propTypes = {\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  className: PropTypes.string\n}\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsHorizontal = ({ icon, color, stats, statTitle, className, ...rest }) => {\n  return (\n    <Card>\n      <CardBody className={className}>\n        <div className='d-flex justify-content-between align-items-center'>\n          <div>\n            <h2 className='font-weight-bolder mb-0'>{stats}</h2>\n            <p className='card-text'>{statTitle}</p>\n          </div>\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n            <div className='avatar-content'>{icon}</div>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsHorizontal\n\n// ** PropTypes\nStatsHorizontal.propTypes = {\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  className: PropTypes.string\n}\n","import { Fragment, useContext } from 'react'\nimport { Row, Col } from 'reactstrap'\nimport { kFormatter } from '@utils'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport StatsCard from './StatsCard'\nimport OrdersBarChart from './OrdersBarChart'\nimport ProfitLineChart from './ProfitLineChart'\nimport SubscribersGained from './SubscribersGained'\nimport RevenueGenerated from './RevenueGenerated'\nimport QuaterlySales from './QuaterlySales'\nimport OrdersReceived from './OrdersReceived'\nimport SiteTraffic from './SiteTraffic'\nimport ActiveUsers from './ActiveUsers'\nimport Newsletter from './Newsletter'\nimport StatsVertical from '@components/widgets/stats/StatsVertical'\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\nimport {\n  Eye,\n  MessageSquare,\n  ShoppingBag,\n  Heart,\n  Award,\n  Truck,\n  Cpu,\n  Server,\n  Activity,\n  AlertOctagon\n} from 'react-feather'\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\n\nconst StatisticsCards = () => {\n  const context = useContext(ThemeColors)\n\n  return (\n    <Fragment>\n      <Breadcrumbs breadCrumbTitle='Statistics Cards' breadCrumbParent='Card' breadCrumbActive='Statistics Cards' />\n\n      <Row>\n        {/* Orders Bar Chart */}\n        <Col lg='2' xs='6'>\n          <OrdersBarChart warning={context.colors.warning.main} />\n        </Col>\n        {/* Orders Bar Chart */}\n\n        {/* Profit Line Chart */}\n        <Col lg='2' xs='6'>\n          <ProfitLineChart info={context.colors.info.main} />\n        </Col>\n        {/* Profit Line Chart */}\n\n        {/* Stats Card */}\n        <Col lg='8' sm='12'>\n          <StatsCard cols={{ md: '3', sm: '6' }} />\n        </Col>\n        {/* Stats Card */}\n      </Row>\n\n      <Row>\n        {/* Stats With Icons */}\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Eye size={21} />} color='info' stats='36.9k' statTitle='Views' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<MessageSquare size={21} />} color='warning' stats='12k' statTitle='Comments' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<ShoppingBag size={21} />} color='danger' stats='97.8k' statTitle='Orders' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Heart size={21} />} color='primary' stats='26.8' statTitle='Bookmarks' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Award size={21} />} color='success' stats='689' statTitle='Reviews' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Truck size={21} />} color='danger' stats='2.1k' statTitle='Returns' />\n        </Col>\n        {/* Stats With Icons */}\n      </Row>\n\n      <Row>\n        {/* Stats With Icons Horizontal */}\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Cpu size={21} />} color='primary' stats='86%' statTitle='CPU Usage' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Server size={21} />} color='success' stats='1.2gb' statTitle='Memory Usage' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Activity size={21} />} color='danger' stats='0.1%' statTitle='Downtime Ratio' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<AlertOctagon size={21} />} color='warning' stats='13' statTitle='Issues Found' />\n        </Col>\n        {/* Stats With Icons Horizontal */}\n      </Row>\n\n      <Row>\n        {/* Stats Area Charts */}\n        <Col lg='3' sm='6'>\n          <SubscribersGained kFormatter={kFormatter} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <RevenueGenerated kFormatter={kFormatter} success={context.colors.success.main} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <QuaterlySales danger={context.colors.danger.main} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <OrdersReceived kFormatter={kFormatter} warning={context.colors.warning.main} />\n        </Col>\n        {/* Stats Area Charts */}\n      </Row>\n\n      <Row>\n        {/* Stats Line Charts */}\n        <Col lg='4' sm='6'>\n          <SiteTraffic />\n        </Col>\n        <Col lg='4' sm='6'>\n          <ActiveUsers success={context.colors.success.main} />\n        </Col>\n        <Col lg='4' sm='6'>\n          <Newsletter warning={context.colors.warning.main} />\n        </Col>\n        {/* Stats Line Charts */}\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default StatisticsCards\n"],"sourceRoot":""}
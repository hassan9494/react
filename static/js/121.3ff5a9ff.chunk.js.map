{"version":3,"sources":["data/use-user.js","data/use-shipping-provider.js","data/use-city.js","@core/components/form-errors/index.js","views/order/components/OrderStatus.js","views/order/components/OrderOptions.js","views/order/components/ShippingStatus.js","@core/components/breadcrumbs/index.js","data/use-data.js","@core/components/sweetalert/index.js","views/settings/sms/component/SmsCustomer.js","views/settings/sms/component/SmsMain.js","views/settings/sms/send_sms.js"],"names":["url","api","create","params","apiCalls","update","id","delete","autocomplete","q","a","axios","get","data","changePassword","post","verificationEmail","useModel","model","useDatatable","result","datatable","mutates","useEmployeeDatatable","useModels","models","errors","color","Object","keys","map","e","className","OrderStatus","order","useState","status","setStatus","useEffect","list","label","value","onSubmit","confirm","toast","success","error","response","message","onCancel","confirmDelete","classNamePrefix","filter","options","onChange","val","Ripple","block","onClick","outline","form","isCompleted","taxed","watch","tax_exempt","setValue","type","disabled","tax_number","name","innerRef","register","for","oldState","setOldState","cities","useCities","providers","useShippingProviders","citiesList","cost","shipping_cost","providersList","hasShipping","target","checked","shipping","city","shipping_provider","getValues","address","control","defaultValue","render","ref","option","inputRef","placeholder","isClearable","isDisabled","required","invalid","step","BreadCrumbs","props","breadCrumbTitle","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","breadCrumbActive","right","tag","to","active","fetcher","then","res","put","useSWR","mutate","loading","revalidateOnFocus","revalidateOnReconnect","refreshWhenOffline","refreshWhenHidden","refreshInterval","base","endpoint","page","limit","search","conditions","JSON","stringify","items","total","table","MySwal","withReactContent","Swal","callback","fire","title","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","user","setUser","renderItem","item","phone","promiseOptions","inputValue","email","Row","Col","sm","FormGroup","Label","defaultOptions","loadOptions","cacheOptions","extra","action","removedValue","onUserChange","Input","subject","CustomInput","PreviewCard","isReorder","Card","CardBody","moment","format","SmsCustomer","Button","size","useForm","handleSubmit","setFormErrors","console","log","history","push","Form","md","SmsMain"],"mappings":"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","file":"static/js/121.3ff5a9ff.chunk.js","sourcesContent":["import useSWR from 'swr'\nimport axios from '../utility/axiosIsntance'\nimport { datatable, model, api as apiCalls } from \"./use-data\"\n\nconst fetcher = (url) => axios.get(url).then(res => res.data?.data)\n\nconst url = 'user'\n\nexport const api = {\n    create: params => apiCalls.create(url, params),\n    update: (id, params) => apiCalls.update(url, id, params),\n    delete: id => apiCalls.delete(url, id),\n    autocomplete: async (q) => {\n        const { data } = await axios.get(`${url}/autocomplete?q=${q}`)\n        return data?.data\n    },\n    changePassword: async (id, params) => {\n        const { data } = await axios.post(`${url}/${id}/change-password`, params)\n        return data?.data\n    },\n    verificationEmail: async (id) => {\n        const { data } = await axios.post(`${url}/${id}/verification-email`)\n        return data?.data\n    }\n}\n\nexport function useModel(id) {\n    return model(url, id)\n}\n\nexport function useDatatable(params) {\n    const result = datatable(url, `${url}/datatable`, params)\n\n    result.mutates = {\n        ...result.mutates,\n        verificationEmail: api.verificationEmail\n    }\n\n    return result\n}\n\nexport function useEmployeeDatatable(params) {\n    const result = datatable(url, `${url}/employee`, params)\n\n    result.mutates = {\n        ...result.mutates,\n        verificationEmail: api.verificationEmail\n    }\n\n    return result\n}\n\n","import { datatable, model, models, api as apiCalls } from './use-data'\n\nconst url = 'shipping-provider'\n\nexport const api = {\n    create: params => apiCalls.create(url, params),\n    update: (id, params) => apiCalls.update(url, id, params),\n    delete: id => apiCalls.delete(url, id)\n}\n\nexport function useModel(id) {\n    return model(url, id)\n}\n\nexport function useDatatable(params) {\n    return datatable(url, `${url}/datatable`, params)\n}\n\nexport function useModels() {\n    return models(url)\n}\n","import { datatable, model, models, api as apiCalls } from './use-data'\n\nconst url = 'city'\n\nexport const api = {\n    create: params => apiCalls.create(url, params),\n    update: (id, params) => apiCalls.update(url, id, params),\n    delete: id => apiCalls.delete(url, id)\n}\n\nexport function useModel(id) {\n    return model(url, id)\n}\n\nexport function useDatatable(params) {\n    return datatable(url, `${url}/datatable`, params)\n}\n\nexport function useModels() {\n    return models(url)\n}\n","import { Alert } from 'reactstrap'\n\nexport default function ({ errors }) {\n    if (!errors) return <></>\n    return (\n        <Alert color='danger'>\n            { Object.keys(errors).map(e => <div className='alert-body'>{errors[e][0]}</div>) }\n        </Alert>\n    )\n}\n","import { Card, CardBody, Button, FormGroup } from 'reactstrap'\nimport Select from 'react-select'\nimport { useEffect, useState } from 'react'\nimport { toast } from 'react-toastify'\nimport { confirm, confirmDelete } from '@components/sweetalert'\n\nconst OrderStatus = ({ update, order }) => {\n\n    const [status, setStatus] = useState(null)\n\n    useEffect(() => {\n        if (!status) setStatus(order?.status)\n    }, [order])\n    const list = [\n        {\n            label: 'New Order',\n            value: 'PENDING'\n        },\n        {\n            label: 'Processing',\n            value: 'PROCESSING'\n        },\n        {\n            label: 'Completed',\n            value: 'COMPLETED'\n        }\n    ]\n\n    const onSubmit = async () => {\n        confirm(async () => {\n            try {\n                await update({status})\n                toast.success('Success')\n            } catch (e) {\n                toast.error(e.response?.data?.message)\n            }\n        })\n    }\n\n    const onCancel = async () => {\n        confirmDelete(async () => {\n            try {\n                await update({status: 'CANCELED'})\n                setStatus('CANCELED')\n                toast.success('Success')\n            } catch (e) {\n                toast.error(e.response?.data?.message)\n            }\n        })\n    }\n\n    return (\n        <Card className='invoice-action-wrapper'>\n            <CardBody>\n                <FormGroup>\n                    <Select\n                        className='react-select'\n                        classNamePrefix='select'\n                        value={list.filter(list => list.value === (status || order?.status))}\n                        options={list}\n                        onChange={val => setStatus(val?.value)}\n                    />\n                </FormGroup>\n                <Button.Ripple color='primary' block onClick={onSubmit}>\n                    Update Status\n                </Button.Ripple>\n                {\n                    order?.status === 'PENDING' &&\n                    <Button.Ripple color='danger' outline className='mt-1' block onClick={onCancel}>\n                        Delete Order\n                    </Button.Ripple>\n                }\n            </CardBody>\n        </Card>\n    )\n}\n\nexport default OrderStatus\n","import { CustomInput, Label } from 'reactstrap'\nimport { useEffect } from 'react'\n\nexport default function ({ form, order, isCompleted}) {\n\n    const taxed = form.watch('options.taxed')\n    const tax_exempt = form.watch('options.tax_exempt')\n\n    useEffect(() => {\n        if (!taxed) {\n            form.setValue('options.tax_exempt', false)\n            form.setValue('options.tax_zero', false)\n        } else {\n            form.setValue('options.price_offer', false)\n        }\n        if (!tax_exempt) {\n            form.setValue('options.tax_zero', false)\n        }\n    }, [taxed, tax_exempt])\n\n    return (\n        <div className='mt-1'>\n            <div className='d-flex justify-content-between'>\n                <CustomInput\n                    id='order-taxed'\n                    type='switch'\n                    disabled={!!order?.tax_number || isCompleted}\n                    name='options.taxed'\n                    innerRef={form.register()}\n                />\n                <Label className='mb-0 font-medium-1' for='order-taxed'>\n                    <strong>فاتورة ضريبية</strong>\n                </Label>\n            </div>\n            <div className='d-flex justify-content-between mt-1'>\n                <CustomInput\n                    disabled={!taxed || isCompleted}\n                    id='order-tax-exempt'\n                    type='switch'\n                    name='options.tax_exempt'\n                    innerRef={form.register()}\n                />\n                <Label className='mb-0 font-medium-1' for='order-tax-exempt'>\n                    <strong>معفي من الضريبة</strong>\n                </Label>\n            </div>\n            <div className='d-flex justify-content-between mt-1'>\n\n                <CustomInput\n                    disabled={!taxed || isCompleted || !tax_exempt}\n                    id='order-tax-zero'\n                    type='switch'\n                    name='options.tax_zero'\n                    innerRef={form.register()}\n                />\n                <Label className='mb-0 font-medium-1' for='order-tax-exempt'>\n                    <strong>معفي بنسبة الصفر</strong>\n                </Label>\n\n            </div>\n            <div className='d-flex justify-content-between mt-1'>\n                <CustomInput\n                    disabled={isCompleted}\n                    id='order-dept'\n                    type='switch'\n                    name='options.dept'\n                    innerRef={form.register()}\n                />\n                <Label className='mb-0 font-medium-1' for='order-dept'>\n                    <strong>فاتورة ذمم</strong>\n                </Label>\n            </div>\n            <div className='d-flex justify-content-between mt-1'>\n                <CustomInput\n                    disabled={taxed || isCompleted}\n                    id='order-price-offer'\n                    type='switch'\n                    name='options.price_offer'\n                    innerRef={form.register()}\n                />\n                <Label className='mb-0 font-medium-1' for='order-price-offer'>\n                    <strong>عرض سعر</strong>\n                </Label>\n            </div>\n        </div>\n    )\n\n}","import { Card, CardBody, FormGroup, CardHeader, CustomInput, Input, Label } from 'reactstrap'\nimport Select from 'react-select'\nimport { Controller } from 'react-hook-form'\nimport { useModels as useCities } from '@data/use-city'\nimport { useModels as useShippingProviders } from '@data/use-shipping-provider'\nimport { useEffect, useState } from 'react'\n\nexport default function ({ form, isCompleted }) {\n\n    const [oldState, setOldState] = useState({})\n\n    const { data: cities } = useCities()\n    const { data: providers } = useShippingProviders()\n\n    const citiesList = cities.map(e => ({ label: e.name, value: e.id, cost: e.shipping_cost }))\n    const providersList = providers.map(e => ({ label: e.name, value: e.id }))\n\n    const hasShipping = form.watch('has_shipping')\n\n    const handleChangeShipping = (state) => {\n        if (!state) {\n            setOldState({\n                city: form.getValues('city_id'),\n                shipping_provider: form.getValues('shipping_provider_id'),\n                shipping: {\n                    cost: form.getValues('shipping.cost'),\n                    address: form.getValues('shipping.address'),\n                    status: form.getValues('shipping.status')\n                }\n            })\n            form.setValue('shipping.cost', null)\n            form.setValue('shipping.address', null)\n            form.setValue('shipping.status', null)\n            form.setValue('city_id', null)\n            form.setValue('shipping_provider_id', null)\n        } else if (oldState) {\n            form.setValue('shipping', oldState.shipping)\n            form.setValue('city_id', oldState.city)\n            form.setValue('shipping_provider_id', oldState.shipping_provider)\n        }\n    }\n\n    const handleChangeShippingLocation = (city) => {\n        form.setValue('shipping.cost', city?.cost || 0)\n    }\n\n    const list = [\n        {\n            label: 'Waiting for shipping',\n            value: 'WAITING'\n        },\n        {\n            label: 'On The Way',\n            value: 'SHIPPED'\n        },\n        {\n            label: 'Delivered',\n            value: 'DELIVERED'\n        }\n    ]\n\n    return (\n        <Card>\n            <CardHeader>\n                Shipping\n                <CustomInput\n                    disabled={isCompleted}\n                    id='order-has-shipping'\n                    type='switch'\n                    name='has_shipping'\n                    innerRef={form.register()}\n                    onChange={e => handleChangeShipping(e.target.checked)}\n                />\n            </CardHeader>\n            {\n                <CardBody>\n\n                    <FormGroup>\n                        <Controller\n                            control={form.control}\n                            defaultValue={null}\n                            name=\"city_id\"\n                            render={({ onChange, value, name, ref }) => (\n                                <Select\n                                    className='react-select'\n                                    classNamePrefix='select'\n                                    value={citiesList.filter(option => option.value === value)}\n                                    inputRef={ref}\n                                    placeholder={'Select City...'}\n                                    options={citiesList}\n                                    onChange={val => {\n                                        onChange(val?.value || null)\n                                        handleChangeShippingLocation(val)\n                                    }}\n                                    isClearable={true}\n                                    isDisabled={!hasShipping || isCompleted}\n                                />\n                            )}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Controller\n                            control={form.control}\n                            defaultValue={null}\n                            name=\"shipping_provider_id\"\n                            render={({ onChange, value, name, ref }) => (\n                                <Select\n                                    className='react-select'\n                                    classNamePrefix='select'\n                                    placeholder={'Select Shipping Provider...'}\n                                    value={providersList.filter(option => option.value === value)}\n                                    inputRef={ref}\n                                    options={providersList}\n                                    onChange={val => onChange(val?.value || null)}\n                                    isClearable={true}\n                                    isDisabled={!hasShipping || isCompleted}\n                                />\n                            )}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Input\n                            disabled={!hasShipping || isCompleted}\n                            type='textarea'\n                            name='shipping.address'\n                            placeholder='Shipping Address'\n                            innerRef={form.register({required: hasShipping})}\n                            invalid={form.errors.shipping?.address && true}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Input\n                            disabled={!hasShipping || isCompleted}\n                            type='number'\n                            name='shipping.cost'\n                            placeholder='Cost'\n                            step=\"0.1\"\n                            innerRef={form.register({required: hasShipping})}\n                            invalid={form.errors.shipping?.cost && true}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Controller\n                            control={form.control}\n                            defaultValue={'WAITING'}\n                            name=\"shipping.status\"\n                            render={({ onChange, value, name, ref }) => (\n                                <Select\n                                    isDisabled={!hasShipping || isCompleted}\n                                    className='react-select'\n                                    classNamePrefix='select'\n                                    value={list.filter(option => option.value === value)}\n                                    inputRef={ref}\n                                    options={list}\n                                    onChange={val => onChange(val?.value)}\n                                />\n                            )}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <div className='d-flex justify-content-between mt-1'>\n                            <Label className='mb-0' for='order-free-shipping'>\n                                Free Shipping\n                            </Label>\n                            <CustomInput\n                                disabled={!hasShipping || isCompleted}\n                                id='order-free-shipping'\n                                type='switch'\n                                name='shipping.free'\n                                innerRef={form.register()}\n                            />\n                        </div>\n                    </FormGroup>\n                </CardBody>\n            }\n        </Card>\n    )\n}\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive, right } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-9 mb-2'>\n      {/*<div className='content-header-left col-md-9 col-12 mb-2'>*/}\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {\n                  breadCrumbParent &&\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent}\n                  </BreadcrumbItem>\n                }\n                {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      {\n        right ? (\n          <div className='content-header-right text-md-right col-3'>\n            {/*<div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>*/}\n            <div className='form-group breadcrum-right dropdown'>\n              { right }\n              {/*<UncontrolledButtonDropdown>*/}\n              {/*  <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>*/}\n              {/*    <Grid size={14} />*/}\n              {/*  </DropdownToggle>*/}\n              {/*  <DropdownMenu tag='ul' right>*/}\n              {/*    <DropdownItem tag={Link} to='/apps/chat'>*/}\n              {/*      <CheckSquare className='mr-1' size={14} />*/}\n              {/*      <span className='align-middle'>Todo</span>*/}\n              {/*    </DropdownItem>*/}\n              {/*    <DropdownItem tag={Link} to='/apps/chat'>*/}\n              {/*      <MessageSquare className='mr-1' size={14} />*/}\n              {/*      <span className='align-middle'>Chat</span>*/}\n              {/*    </DropdownItem>*/}\n              {/*    <DropdownItem tag={Link} to='/apps/email'>*/}\n              {/*      <Mail className='mr-1' size={14} />*/}\n              {/*      <span className='align-middle'>Email</span>*/}\n              {/*    </DropdownItem>*/}\n              {/*    <DropdownItem tag={Link} to='/apps/calendar'>*/}\n              {/*      <Calendar className='mr-1' size={14} />*/}\n              {/*      <span className='align-middle'>Calendar</span>*/}\n              {/*    </DropdownItem>*/}\n              {/*  </DropdownMenu>*/}\n              {/*</UncontrolledButtonDropdown>*/}\n            </div>\n          </div>\n        ) : ''\n      }\n\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n","import useSWR from 'swr'\nimport axios from '../utility/axiosIsntance'\n\nconst fetcher = (url) => axios.get(url).then(res => res.data?.data)\n\nexport const api = {\n\n    create: async (url, params) => {\n        const { data } = await axios.post(url, params)\n        return data?.data\n    },\n\n    update: async (url, id, params) => {\n        const { data } = await axios.put(`${url}/${id}`, params)\n        return data?.data\n    },\n\n    delete: async (url, id) => {\n        await axios.delete(`${url}/${id}`)\n    }\n}\n\nexport function model(url, id) {\n\n    const { data, mutate, error } = useSWR(`${url}/${id}`, fetcher)\n\n    const loading = !data && !error\n\n    return {\n        loading,\n        error,\n        data,\n        mutate,\n        update: async (params) => {\n            await api.update(url, id, params)\n            await mutate()\n        }\n    }\n}\n\n\nexport function models(url) {\n\n    const { data, mutate, error } = useSWR(url, fetcher, {\n        revalidateOnFocus: false,\n        revalidateOnReconnect: false,\n        refreshWhenOffline: false,\n        refreshWhenHidden: false,\n        refreshInterval: 0\n    })\n\n    const loading = !data && !error\n\n    return {\n        loading,\n        error,\n        data: data || [],\n        mutate,\n        create: async (params) => api.create(params)\n    }\n}\n\n\nexport function datatable(base, endpoint, { page, limit, search, order = {}, conditions = {} }) {\n\n    const url = `${endpoint}?page=${page}&limit=${limit}&search=${search}&order=${JSON.stringify(order)}&conditions=${JSON.stringify(conditions)}`\n\n    const { data, mutate, error } = useSWR(url, fetcher)\n\n    const loading = !data && !error\n\n    return {\n        loading,\n        error,\n        data: data?.items || [],\n        total: data?.total || 0,\n        mutate,\n        mutates: {\n            delete: async (id) => {\n                await api.delete(base, id)\n                await mutate(url)\n            }\n        }\n    }\n\n}\n\nexport function table(endpoint, { conditions }) {\n\n    const url = `${endpoint}?conditions=${JSON.stringify(conditions)}`\n\n    const { data, mutate, error } = useSWR(url, fetcher)\n\n    const loading = !data && !error\n\n    return {\n        loading,\n        error,\n        data: data?.items || [],\n        total: data?.total || 0,\n        mutate\n    }\n\n}\n","import Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\nconst MySwal = withReactContent(Swal)\n\nexport const confirm = async (callback) => {\n    MySwal.fire({\n        title: 'Are you sure?',\n        // text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, do it!',\n        customClass: {\n            confirmButton: 'btn btn-primary',\n            cancelButton: 'btn btn-outline-danger ml-1'\n        },\n        buttonsStyling: false\n    }).then(function (result) {\n        if (result.value)  callback()\n    })\n}\n\nexport const confirmDelete = async (callback) => {\n    MySwal.fire({\n        title: 'Are you sure want to delete?',\n        // text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, delete it!',\n        customClass: {\n            confirmButton: 'btn btn-danger',\n            cancelButton: 'btn btn-outline-danger ml-1'\n        },\n        buttonsStyling: false\n    }).then(function (result) {\n        if (result.value)  callback()\n    })\n}\n","import {Col, CustomInput, FormGroup, Input, Label, Row} from 'reactstrap'\nimport React, { useEffect, useState } from 'react'\nimport AsyncSelect from 'react-select/async/dist/react-select.esm'\nimport { api } from '@data/use-user'\nimport { Controller } from 'react-hook-form'\n\nexport default function ({ form, disabled }) {\n\n    const [user, setUser] = useState()\n\n\n    const onUserChange = (value, { action, removedValue }) => {\n        setUser(value?.item)\n        if (value?.item) {\n            form.setValue('customer.name', value.item.name)\n            form.setValue('customer.email', value.item.email)\n            form.setValue('customer.phone', value.item.phone)\n        }\n    }\n\n    const renderItem = (item) => (\n        <div className=\"d-flex justify-content-left align-items-center\">\n            <div className=\"d-flex flex-column\">\n                <h6 className=\"user-name text-truncate mb-0\">{ item?.phone }</h6>\n                <small className=\"text-truncate text-muted mb-0\">{ item?.name }</small>\n            </div>\n        </div>\n    )\n\n    const promiseOptions = async inputValue => {\n        const data = await api.autocomplete(inputValue)\n        return data.map(({ id, name, email, phone }) => {\n            return {\n                label: renderItem({ id, name, email, phone }),\n                value: id,\n                item: { id, name, email, phone }\n            }\n        })\n    }\n\n    return (\n        <Row>\n            <Col sm='5'>\n                <FormGroup>\n                    <Label for='user_id'>User</Label>\n                    <Controller\n                        control={form.control}\n                        defaultValue={null}\n                        name=\"user_id\"\n                        render={\n                            ({ onChange, value, name, ref }) => {\n                                return (\n                                    <AsyncSelect\n                                        isClearable={true}\n                                        className='react-select'\n                                        classNamePrefix='select'\n                                        defaultOptions\n                                        isDisabled={disabled}\n                                        value={{value, label: renderItem(user)}}\n                                        loadOptions={promiseOptions}\n                                        cacheOptions\n                                        onChange={\n                                            (value, extra) => {\n                                                onChange(value?.item.id)\n                                                onUserChange(value, extra)\n                                            }\n                                        }\n                                    />\n\n                                )\n                            }}\n                        />\n\n                </FormGroup>\n            </Col>\n            <Col sm='5'>\n                <FormGroup>\n                    <Label for='title'>Title</Label>\n                    <Input\n                        disabled={disabled}\n                        type='text'\n                        id='title'\n                        placeholder={'Add Sms Title'}\n                        name=\"title\"\n                        innerRef={form.register({required: true})}\n                        invalid={form.errors.subject && true}\n                    />\n                </FormGroup>\n            </Col>\n            <Col sm='2'>\n                <FormGroup>\n                    <Label for='subject'>To All Users</Label>\n                    <CustomInput\n                        id='to_all'\n                        type='switch'\n                        disabled={disabled}\n                        name='to_all'\n                        innerRef={form.register()}\n                    />\n\n                </FormGroup>\n            </Col>\n            <Col sm='12'>\n                <FormGroup>\n                    <Label for='message'>Message</Label>\n                    <Input\n                        disabled={disabled}\n                        id='message'\n                        type='textarea'\n                        name=\"message\"\n                        placeholder={'Add Sms Content'}\n                        innerRef={form.register({required: false})}\n                        invalid={form.errors.message && true}\n                    />\n                </FormGroup>\n            </Col>\n        </Row>\n    )\n}","import {\n    Card,\n    CardBody,\n    Button\n} from 'reactstrap'\nimport moment from 'moment'\nimport SmsCustomer from './SmsCustomer'\nimport { Send} from \"react-feather\"\n\nconst PreviewCard = ({  form, isCompleted, isReorder }) => {\n\n\n    return (\n        <Card>\n            <CardBody className='px-2 pb-0'>\n                {/* Header */}\n                <div className='d-flex justify-content-between flex-md-row flex-column'>\n                    <div>\n                        <strong>New Sms </strong>\n                    </div>\n                    <div>\n                        Date: <span className='invoice-number'>{moment().format('Y-MM-DD')}</span>\n                    </div>\n                </div>\n                {/* /Header */}\n            </CardBody>\n\n            <hr className='invoice-spacing'/>\n\n            {/* Address and Contact */}\n            <CardBody className='px-2 pt-0'>\n                <SmsCustomer form={form} disabled={isCompleted} />\n            </CardBody>\n            {/* /Address and Contact */}\n\n            <CardBody className='invoice-padding pt-0 d-flex'>\n            <Button.Ripple color='primary' type='submit' >\n                <Send size={14} />\n                <span className='align-middle ml-25'>Send Sms</span>\n            </Button.Ripple>\n            </CardBody>\n\n        </Card>\n    )\n}\n\nexport default PreviewCard\n","import { Fragment, useState } from 'react'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport { useParams } from 'react-router-dom'\nimport { Button, Card, CardBody, Row, Col, Form, FormGroup, Input, Label } from 'reactstrap'\nimport FormErrors from '@components/form-errors'\nimport {Controller, useForm} from 'react-hook-form'\nimport CardHeader from 'reactstrap/lib/CardHeader'\nimport SmsMain from \"./component/SmsMain\"\nimport OrderStatus from \"../../order/components/OrderStatus\"\nimport ShippingStatus from \"../../order/components/ShippingStatus\"\nimport OrderOptions from \"../../order/components/OrderOptions\"\n\nexport default () => {\n    const form = useForm()\n\n    // const { data: model, update: updateCategory } = useCategory(id)\n    const { register, errors, handleSubmit, control, setValue } = useForm()\n    const [formErrors, setFormErrors] = useState(null)\n\n    const onSubmit = async data => {\n        console.log(data)\n        try {\n            // await updateCategory(data)\n            history.push('/category/list')\n        } catch (e) {\n            setFormErrors(e.response?.data?.errors)\n        }\n    }\n\n    return (\n        <Fragment>\n            <Breadcrumbs breadCrumbTitle='Settings' breadCrumbActive='Send Sms'/>\n            <Form onSubmit={form.handleSubmit(onSubmit)}>\n                <Row>\n                    <Col md={12} sm={12}>\n                        <SmsMain  form={form} isCompleted={false} isReorder={true}/>\n\n                    </Col>\n                </Row>\n            </Form>\n        </Fragment>\n    )\n}\n"],"sourceRoot":""}
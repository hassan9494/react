{"version":3,"sources":["views/order/list/Pending.js"],"names":["Tables","breadCrumbTitle","breadCrumbActive","useDatatable","actions","initialOrder","column","dir","defaultSortField","defaultSortAsc","conditions","ability","can","status","columns","name","selector","sortable","sortField","width","minWidth","cell","row","Number","parseFloat","total","toFixed"],"mappings":"oJAAA,mEAsDeA,UA/CA,kBACX,eAAC,WAAD,WACI,cAAC,IAAD,CAAaC,gBAAgB,SAASC,iBAAiB,WACvD,cAAC,IAAD,CACIC,aAAcA,IACdC,QAASA,IACTC,aAAc,CAACC,OAAQ,KAAMC,IAAK,QAClCC,iBAAkB,SAClBC,gBAAgB,EAChBC,WAAcC,IAAQC,IAAI,OAAQ,sBAAyBD,IAAQC,IAAI,OAAQ,qCAAuH,CAAEC,OAAQ,UAAW,wBAAwB,GAA3H,CAAC,kBAAkB,EAAMA,OAAQ,UAAW,wBAAwB,GAC5LC,QAAS,CACL,CACIC,KAAM,SACNC,SAAU,SACVC,UAAU,EACVC,UAAW,MAEf,CACIH,KAAM,WACNC,SAAU,gBACVC,UAAU,EACVC,UAAW,kBAEf,CACIH,KAAM,QACNC,SAAU,iBACVE,UAAW,kBACXD,UAAU,GAEd,CACIF,KAAM,QACNC,SAAU,QACVC,UAAU,EACVE,MAAO,SAEX,CACIJ,KAAM,QACNC,SAAU,QACVC,UAAU,EACVG,SAAU,QACVC,KAAM,SAAAC,GAAG,OAAIC,OAAOC,WAAP,OAAkBF,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAKG,OAAOC,QAAQ","file":"static/js/121.f6759683.chunk.js","sourcesContent":["import { Fragment } from 'react'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport Datatable from '@components/datatable'\nimport { useDatatable } from '@data/use-order'\nimport actions from '../actions'\nimport ability from \"../../../configs/acl/ability\"\n\nconst Tables = () => (\n    <Fragment>\n        <Breadcrumbs breadCrumbTitle='Orders' breadCrumbActive='Orders' />\n        <Datatable\n            useDatatable={useDatatable}\n            actions={actions}\n            initialOrder={{column: 'id', dir: 'desc'}}\n            defaultSortField={'number'}\n            defaultSortAsc={false}\n            conditions={(!ability.can('read', 'untaxed_list_view') && !ability.can('read', 'befor_completed_untaxed_list_view')) ?  {'options->taxed': true, status: 'PENDING', 'options->price_offer': false } : { status: 'PENDING', 'options->price_offer': false}}\n            columns={[\n                {\n                    name: 'Number',\n                    selector: 'number',\n                    sortable: true,\n                    sortField: 'id'\n                },\n                {\n                    name: 'customer',\n                    selector: 'customer.name',\n                    sortable: true,\n                    sortField: 'customer->name'\n                },\n                {\n                    name: 'phone',\n                    selector: 'customer.phone',\n                    sortField: 'customer->phone',\n                    sortable: true\n                },\n                {\n                    name: 'notes',\n                    selector: 'notes',\n                    sortable: true,\n                    width: '300px'\n                },\n                {\n                    name: 'Total',\n                    selector: 'total',\n                    sortable: true,\n                    minWidth: '100px',\n                    cell: row => Number.parseFloat(row?.total).toFixed(2)\n                }\n            ]}\n        />\n    </Fragment>\n)\n\nexport default Tables\n"],"sourceRoot":""}
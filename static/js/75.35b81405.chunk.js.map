{"version":3,"sources":["data/use-product.js","@core/components/number-input/index.js","data/use-user.js","data/use-shipping-provider.js","data/use-coupon.js","data/use-city.js","@core/components/product/link.js","data/use-invoice.js","views/invoice/components/InvoiceStatus.js","views/invoice/components/InvoiceAttachments.js","views/invoice/components/ProductsTable.js","views/invoice/components/InvoiceCustomer.js","views/invoice/components/InvoiceMain.js","data/use-data.js","views/invoice/edit/index.js","@core/components/sweetalert/index.js"],"names":["fetcher","url","axios","get","then","res","data","api","create","params","a","post","update","id","put","delete","autocomplete","q","stock","sku","useProduct","useSWR","revalidateOnFocus","mutate","error","loading","useDatatable","page","limit","search","order","JSON","stringify","mutates","items","total","useStockDatatable","column","direction","NumberInput","props","min","max","step","size","wrap","value","style","upIcon","disabled","readonly","onChange","downIcon","vertical","className","onDecrement","onIncrement","inputClassName","rest","useState","count","setCount","handleDecrement","e","preventDefault","handleIncrement","useEffect","classnames","addonType","onClick","color","type","readOnly","onKeyDown","keyCode","Number","target","bsSize","defaultProps","Infinity","apiCalls","changePassword","verificationEmail","useModel","model","result","datatable","useModels","models","ProductLink","href","process","name","status","useInvoice","revalidateOnReconnect","refreshWhenOffline","refreshWhenHidden","refreshInterval","updateStatus","conditions","InvoiceStatus","invoice","setStatus","list","label","onSubmit","confirm","toast","success","response","message","onCancel","confirmDelete","classNamePrefix","filter","options","val","Ripple","block","outline","makeid","length","characters","charactersLength","i","charAt","Math","floor","random","formatBytes","bytes","decimals","k","dm","sizes","log","parseFloat","pow","toFixed","Basic","files","forSend","setForSend","uploader","file","formData","FormData","append","axiosInstance","newFiles","map","key","new","useDropzone","maxFiles","multiple","onDropAccepted","getRootProps","acceptedFiles","getInputProps","printFiles","deleted","index","md","path","splice","deleteRow","form","handleChanges","products","event","product","Table","striped","hover","width","control","defaultValue","render","ref","src","image","alt","height","quantity","required","qty","InputGroup","Input","price","InputGroupAddon","InputGroupText","updated","handleDelete","AddProductForm","some","handleNewProduct","formModal","setFormModal","setData","renderItem","promiseOptions","inputValue","min_price","normal_price","item","Modal","isOpen","toggle","ModalHeader","ModalBody","FormGroup","isClearable","loadOptions","cacheOptions","action","removedValue","ModalFooter","Button","Row","Col","sm","Label","for","innerRef","register","invalid","errors","notes","PreviewCard","isCompleted","setDisabled","watch","useLocation","Card","CardBody","number","moment","format","InvoiceCustomer","ProductsTable","base","endpoint","table","fields","useParams","updateInvoice","useForm","loaded","setLoaded","setIsCompleted","field","setValue","completed","Form","handleSubmit","InvoiceMain","InvoiceAttachments","MySwal","withReactContent","Swal","callback","fire","title","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling"],"mappings":"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","file":"static/js/75.35b81405.chunk.js","sourcesContent":["import useSWR from 'swr'\nimport axios from '../utility/axiosIsntance'\n\nconst fetcher = (url) => axios.get(url).then(res => res.data?.data)\n\nexport const api = {\n\n    create: async (params) => {\n        const { data } = await axios.post('product', params)\n        return data?.data\n    },\n\n    update: async (id, params) => {\n        const { data } = await axios.put(`product/${id}`, params)\n        return data?.data\n    },\n    delete: async (id) => {\n        await axios.delete(`product/${id}`)\n    },\n    autocomplete: async (q) => {\n        const { data } = await axios.get(`product/autocomplete?q=${q}`)\n        return data?.data\n    },\n    stock: async (params) => {\n        await axios.post(`product/stock`, params)\n    },\n    sku: async (params) => {\n        await axios.post(`product/sku`, params)\n    }\n}\n\nexport function useProduct(id) {\n\n    const { data, mutate, error } = useSWR(`product/${id}`, fetcher, {\n        revalidateOnFocus: false\n    })\n\n    const loading = !data && !error\n\n    return {\n        loading,\n        error,\n        data,\n        mutate,\n        update: async (params) => {\n            await api.update(id, params)\n            await mutate()\n        }\n    }\n}\n\nexport function useDatatable({ page, limit, search, order = {}}) {\n\n    const url = `product/datatable?page=${page}&limit=${limit}&search=${search}&order=${JSON.stringify(order)}`\n\n    const { data, mutate, error } = useSWR(url, fetcher)\n\n    const loading = !data && !error\n\n    const mutates = {\n        delete: async (id) => {\n            await api.delete(id)\n            mutate({ ...data })\n        }\n    }\n\n    return {\n        loading,\n        error,\n        data: data?.items || [],\n        total: data?.total || 0,\n        mutates\n    }\n\n}\n\nexport function useStockDatatable({ page, limit, search, order }) {\n\n    const url = `product/datatable?page=${page}&limit=${limit}&search=${search}&order=${order?.column}&dir=${order?.direction}`\n\n    const { data, error } = useSWR(url, fetcher)\n\n    const loading = !data && !error\n\n    return {\n        loading,\n        error,\n        data: data?.items || [],\n        total: data?.total || 0\n    }\n\n}\n\n","// ** React Imports\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Plus, Minus } from 'react-feather'\nimport { useState, useEffect } from 'react'\nimport { InputGroup, InputGroupAddon, Input, Button } from 'reactstrap'\n\n// ** Styles\nimport './number-input.scss'\n\n// ** Keycode Vars\nconst KEYCODE_UP = 38\nconst KEYCODE_DOWN = 40\n\nconst NumberInput = props => {\n  // ** Props\n  const {\n    min,\n    max,\n    step,\n    size,\n    wrap,\n    value,\n    style,\n    upIcon,\n    disabled,\n    readonly,\n    onChange,\n    downIcon,\n    vertical,\n    className,\n    onDecrement,\n    onIncrement,\n    inputClassName,\n    ...rest\n  } = props\n\n  // ** State\n  const [count, setCount] = useState(value || min)\n\n  // ** Handle btn down click\n  const handleDecrement = (e) => {\n    e.preventDefault()\n    if (!disabled && !readonly) {\n      // ** If count is equals or smaller than min then return and do nothing\n      if (!wrap && count <= min) {\n        return\n      }\n\n      // ** Returns the decreased count based on wrap & and min prop\n      const countCondition = () => {\n        if (count - step < min) {\n          if (wrap) {\n            return max\n          } else {\n            return min\n          }\n        } else {\n          return count - step\n        }\n      }\n\n      setCount(countCondition())\n\n      if (onDecrement) {\n        onIncrement(count)\n      }\n    }\n  }\n\n  // ** Handle btn up click\n  const handleIncrement = (e) => {\n    e.preventDefault()\n    if (!disabled && !readonly) {\n      // ** If count is equals or larger than min then return and do nothing\n      if (!wrap && count >= max) {\n        return\n      }\n\n      // ** Returns the Increased count based on wrap & and max prop\n      const countCondition = () => {\n        if (count + step > max) {\n          if (wrap) {\n            return min\n          } else {\n            return max\n          }\n        } else {\n          return count + step\n        }\n      }\n\n      setCount(countCondition())\n\n      if (onIncrement) {\n        onIncrement(count)\n      }\n    }\n  }\n\n  // ** Handle input change\n  const handleInputChange = e => {\n    setCount(Number(e.target.value))\n  }\n\n  // ** Handle Arrow Up & Down\n  const handleKeyDown = e => {\n    // e.preventDefault()\n    if (!readonly) {\n      if (e.keyCode === KEYCODE_UP) {\n        handleIncrement()\n      }\n      if (e.keyCode === KEYCODE_DOWN) {\n        handleDecrement()\n      }\n    }\n  }\n\n  // ** UseEffect based on user passed onChange\n  useEffect(() => {\n    if (onChange) {\n      onChange(count)\n    }\n  }, [count])\n\n  return (\n    <InputGroup\n      className={classnames('number-input', {\n        disabled,\n        readonly,\n        [className]: className,\n        'vertical-number-input': vertical,\n        [`vertical-number-input-${size}`]: vertical && size\n      })}\n      {...(style ? { style } : {})}\n    >\n      <InputGroupAddon addonType='prepend' onClick={handleDecrement}>\n        <Button\n          className='btn-icon'\n          color='transparent'\n          {...(size ? { size } : {})}\n          disabled={(!wrap && count <= min) || disabled || readonly}\n        >\n          {downIcon}\n        </Button>\n      </InputGroupAddon>\n      <Input\n        {...rest}\n        type='number'\n        value={count}\n        disabled={disabled}\n        readOnly={readonly}\n        onKeyDown={handleKeyDown}\n        onChange={handleInputChange}\n        className={classnames({\n          [inputClassName]: inputClassName\n        })}\n        {...(size ? { bsSize: size } : {})}\n      />\n      <InputGroupAddon addonType='append' onClick={handleIncrement}>\n        <Button\n          className='btn-icon'\n          color='transparent'\n          {...(size ? { size } : {})}\n          disabled={(!wrap && count >= max) || disabled || readonly}\n        >\n          {upIcon}\n        </Button>\n      </InputGroupAddon>\n    </InputGroup>\n  )\n}\n\nexport default NumberInput\n\n// ** Default Props\nNumberInput.defaultProps = {\n  min: 1,\n  step: 1,\n  wrap: false,\n  max: Infinity,\n  disabled: false,\n  readonly: false,\n  downIcon: <Minus size={14} />,\n  upIcon: <Plus size={14} />\n}\n\n// ** PropTypes\nNumberInput.propTypes = {\n  wrap: PropTypes.bool,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  step: PropTypes.number,\n  value: PropTypes.number,\n  style: PropTypes.object,\n  vertical: PropTypes.bool,\n  disabled: PropTypes.bool,\n  readonly: PropTypes.bool,\n  onChange: PropTypes.func,\n  upIcon: PropTypes.element,\n  downIcon: PropTypes.element,\n  className: PropTypes.string,\n  onDecrement: PropTypes.func,\n  onIncrement: PropTypes.func,\n  inputClassName: PropTypes.string,\n  size: PropTypes.oneOf(['sm', 'lg'])\n}\n","import useSWR from 'swr'\nimport axios from '../utility/axiosIsntance'\nimport { datatable, model, api as apiCalls } from \"./use-data\"\n\nconst fetcher = (url) => axios.get(url).then(res => res.data?.data)\n\nconst url = 'user'\n\nexport const api = {\n    create: params => apiCalls.create(url, params),\n    update: (id, params) => apiCalls.update(url, id, params),\n    delete: id => apiCalls.delete(url, id),\n    autocomplete: async (q) => {\n        const { data } = await axios.get(`${url}/autocomplete?q=${q}`)\n        return data?.data\n    },\n    changePassword: async (id, params) => {\n        const { data } = await axios.post(`${url}/${id}/change-password`, params)\n        return data?.data\n    },\n    verificationEmail: async (id) => {\n        const { data } = await axios.post(`${url}/${id}/verification-email`)\n        return data?.data\n    }\n}\n\nexport function useModel(id) {\n    return model(url, id)\n}\n\nexport function useDatatable(params) {\n    const result = datatable(url, `${url}/datatable`, params)\n\n    result.mutates = {\n        ...result.mutates,\n        verificationEmail: api.verificationEmail\n    }\n\n    return result\n}\n\n","import { datatable, model, models, api as apiCalls } from './use-data'\n\nconst url = 'shipping-provider'\n\nexport const api = {\n    create: params => apiCalls.create(url, params),\n    update: (id, params) => apiCalls.update(url, id, params),\n    delete: id => apiCalls.delete(url, id)\n}\n\nexport function useModel(id) {\n    return model(url, id)\n}\n\nexport function useDatatable(params) {\n    return datatable(url, `${url}/datatable`, params)\n}\n\nexport function useModels() {\n    return models(url)\n}\n","import { datatable, model, models, api as apiCalls } from './use-data'\n\nconst url = 'coupon'\n\nexport const api = {\n    create: params => apiCalls.create(url, params),\n    update: (id, params) => apiCalls.update(url, id, params),\n    delete: id => apiCalls.delete(url, id)\n}\n\nexport function useModel(id) {\n    return model(url, id)\n}\n\nexport function useDatatable(params) {\n    return datatable(url, `${url}/datatable`, params)\n}\n\nexport function useModels() {\n    return models(url)\n}\n","import { datatable, model, models, api as apiCalls } from './use-data'\n\nconst url = 'city'\n\nexport const api = {\n    create: params => apiCalls.create(url, params),\n    update: (id, params) => apiCalls.update(url, id, params),\n    delete: id => apiCalls.delete(url, id)\n}\n\nexport function useModel(id) {\n    return model(url, id)\n}\n\nexport function useDatatable(params) {\n    return datatable(url, `${url}/datatable`, params)\n}\n\nexport function useModels() {\n    return models(url)\n}\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { ChevronUp } from 'react-feather'\nimport { Collapse, Card, CardHeader, CardBody, CardTitle } from 'reactstrap'\n\nconst ProductLink = props => {\n  // ** Props\n  const { data } = props\n    return (\n      <a className='text-dark' href={`${process.env.REACT_APP_WEBSITE}/product/${data.sku}`} target='_blank'>{ data.name }</a>\n    )\n}\n\nexport default ProductLink\n\n// ** PropTypes\nProductLink.propTypes = {\n  data: Proptypes.any.isRequired\n}\n","import useSWR, { mutate } from 'swr'\nimport axios from '../utility/axiosIsntance'\n\nconst fetcher = (url) => axios.get(url).then(res => res.data?.data)\n\nexport const api = {\n    create: async (params) => {\n        const { data } = await axios.post(`invoice`, params)\n        return data?.data\n    },\n    update: async (id, params) => {\n        const { data } = await axios.put(`invoice/${id}`, params)\n        return data?.data\n    },\n    status: async (id, params) => {\n        const { data } = await axios.post(`invoice/${id}/status`, params)\n        return data?.data\n    }\n}\n\nexport function useInvoice(id) {\n\n    const url = `invoice/${id}`\n\n    const { data, error } = useSWR(`invoice/${id}`, fetcher, {\n        revalidateOnFocus: false,\n        revalidateOnReconnect: false,\n        refreshWhenOffline: false,\n        refreshWhenHidden: false,\n        refreshInterval: 0\n    })\n\n    const loading = !data && !error\n\n\n    const update = async (params) => {\n        await api.update(id, params)\n        await mutate(url)\n    }\n\n    const updateStatus = async (params) => {\n        await api.status(id, params)\n        await mutate(url, { ...data, ...params}, false)\n    }\n\n    return {\n        loading,\n        error,\n        data,\n        mutate,\n        update,\n        updateStatus\n    }\n}\n\nexport function useDatatable({ page, limit, search, order = {}, conditions = {} }) {\n\n    const url = `invoice/datatable?page=${page}&limit=${limit}&search=${search}&order=${JSON.stringify(order)}&conditions=${JSON.stringify(conditions)}`\n\n    const { data, mutate, error } = useSWR(url, fetcher)\n\n    const loading = !data && !error\n\n    const mutates = {\n    }\n\n    return {\n        loading,\n        error,\n        data: data?.items || [],\n        total: data?.total || 0,\n        mutates\n    }\n\n}\n","import { Card, CardBody, Button, FormGroup } from 'reactstrap'\nimport Select from 'react-select'\nimport { useEffect, useState } from 'react'\nimport { toast } from 'react-toastify'\nimport { confirm, confirmDelete } from '@components/sweetalert'\n\nconst InvoiceStatus = ({ update, invoice }) => {\n\n    const [status, setStatus] = useState(null)\n\n    useEffect(() => {\n        if (!status) setStatus(invoice?.status)\n    }, [invoice])\n    const list = [\n        {\n            label: 'New Invoice',\n            value: 'DRAFT'\n        },\n        {\n            label: 'Canceled',\n            value: 'CANCELED'\n        },\n        {\n            label: 'Completed',\n            value: 'COMPLETED'\n        }\n    ]\n\n    const onSubmit = async () => {\n        confirm(async () => {\n            try {\n                await update({status})\n                toast.success('Success')\n            } catch (e) {\n                toast.error(e.response?.data?.message)\n            }\n        })\n    }\n\n    const onCancel = async () => {\n        confirmDelete(async () => {\n            try {\n                await update({status: 'CANCELED'})\n                setStatus('CANCELED')\n                toast.success('Success')\n            } catch (e) {\n                toast.error(e.response?.data?.message)\n            }\n        })\n    }\n\n    return (\n        <Card className='invoice-action-wrapper'>\n            <CardBody>\n                <FormGroup>\n                    <Select\n                        className='react-select'\n                        classNamePrefix='select'\n                        value={list.filter(list => list.value === (status || invoice?.status))}\n                        options={list}\n                        onChange={val => setStatus(val?.value)}\n                    />\n                </FormGroup>\n                <Button.Ripple color='primary' block onClick={onSubmit} disabled={invoice?.status === 'COMPLETED'}>\n                    Update Status\n                </Button.Ripple>\n                {\n                    invoice?.status === 'PENDING' &&\n                    <Button.Ripple color='danger' outline className='mt-1' block onClick={onCancel}>\n                        Delete Invoice\n                    </Button.Ripple>\n                }\n            </CardBody>\n        </Card>\n    )\n}\n\nexport default InvoiceStatus\n","import React, { useEffect, useState } from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport { Button, Card, CardBody, CardHeader, Col, Input, Row, Spinner } from \"reactstrap\"\nimport {Download, Printer, Trash} from \"react-feather\"\nimport axiosInstance from '../../../utility/axiosIsntance'\n\nfunction makeid(length = 10) {\n    let result = ''\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n    const charactersLength = characters.length\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength))\n    }\n    return result\n}\nfunction formatBytes(bytes, decimals = 2) {\n    if (bytes === 0) return '0 Bytes'\n    const k = 1024\n    const dm = decimals < 0 ? 0 : decimals\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))  } ${  sizes[i]}`\n}\n\nfunction Basic({onChange, files = []}) {\n\n    const [forSend, setForSend] = useState([])\n\n    const uploader = async (file) => {\n        const formData = new FormData()\n        formData.append('file', file.file)\n        formData.append('id', file.id)\n        const { data } = await axiosInstance.post('media/invoice', formData)\n        const newFiles = files.map(e => {\n            if (e.id === data.id) {\n                e.url = data.url\n                e.key = data.key\n                e.name = data.name\n                e.new = true\n            }\n            return e\n        })\n        onChange(newFiles)\n    }\n\n    const {acceptedFiles, getRootProps, getInputProps } = useDropzone({\n        maxFiles: 5,\n        multiple: true,\n        onDropAccepted: newFiles => {\n            newFiles = newFiles.map(file => {\n                return { id: makeid(), file }\n            })\n            onChange([...files, ...newFiles])\n            setForSend(newFiles)\n        }\n    })\n\n    useEffect(() => {\n        for (const file of forSend) uploader(file)\n    }, [forSend])\n\n    useEffect(() => {\n        onChange(files)\n    }, [files])\n\n    const deleteRow = (index) => {\n        const newFiles = [...files]\n        if (newFiles[index].new) {\n            newFiles.splice(index, 1)\n        } else {\n            newFiles[index].deleted = true\n        }\n        onChange(newFiles)\n    }\n\n    const printFiles = files.filter(e => !e.deleted).map(({file, id, url, name, size}, index) => (\n        <section key={id}>\n            <Row className='justify-content-between align-items-center'>\n                <Col md={10} className='mb-1'>\n                    <Input type='text' disabled value={`[${formatBytes(size || file.size)}] - ${name || url || file.path}`} />\n                </Col>\n                <Col md={1} className='text-center mb-1'>\n                    <a href={url} target='_blank'>\n                        <Button.Ripple\n                            block\n                            className='btn-icon'\n                            color='light'\n                            // onClick={() => deleteRow(i)}\n                        >\n                            { url ? <Download size={20} /> : <Spinner size={'sm'}/> }\n                        </Button.Ripple>\n                    </a>\n                </Col>\n                <Col md={1} className='text-center mb-1'>\n                    <Button.Ripple\n                        block\n                        className='btn-icon'\n                        color='light'\n                        onClick={() => deleteRow(index)}\n                    >\n                        <Trash size={20} />\n                    </Button.Ripple>\n                </Col>\n            </Row>\n            <hr className='m-0 mb-1'/>\n        </section>\n    ))\n\n    return (\n        <Card>\n            <CardHeader>\n                <h4>Attachments</h4>\n            </CardHeader>\n            <CardBody>\n                <div {...getRootProps({className: 'dropzone'})}>\n                    <input {...getInputProps()} />\n                    <p className=\"attachments-box\">Drag 'n' drop some files here, or click to select files</p>\n                </div>\n                {printFiles}\n            </CardBody>\n        </Card>\n    )\n}\n\nexport default Basic","import {\n    Button, ButtonGroup,\n    FormGroup,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Modal,\n    ModalBody, ModalFooter,\n    ModalHeader,\n    Table\n} from 'reactstrap'\nimport { Controller } from 'react-hook-form'\nimport { PlusCircle, Trash } from 'react-feather'\nimport { useEffect, useState } from 'react'\nimport AsyncSelect from 'react-select/async/dist/react-select.esm'\nimport { confirm } from '@components/sweetalert'\nimport NumberInput from '@components/number-input'\nimport { api } from '@data/use-product'\nimport { getProductPrice } from \"./helpers\"\nimport ProductLink from \"@components/product/link\"\n\nexport default function ({ disabled, form }) {\n\n    const handleChanges = (products, id, event, update) => {\n        if (disabled) return\n        const updated = products.map(product => {\n            if (product.id === id) product[event.name] = event.value\n            return product\n        })\n        update(updated)\n    }\n\n    const handleDelete = (products, id, update) => {\n        if (disabled) return\n        const updated = products.filter(e => e.id !== id).map(e => e)\n        confirm(() => {\n            update(updated)\n        })\n    }\n\n    const handleNewProduct = (products, product, update) => {\n        if (disabled) return\n        products = products ?? []\n        product.quantity = 1\n        const exists = products?.some(e => e.id === product.id)\n        if (!exists) {\n            update([...products, product])\n        }\n    }\n\n\n    return (\n        <Table striped hover size='sm'>\n            <thead>\n            <tr>\n                <th>Product</th>\n                <th width={'15%'}>Quantity</th>\n                <th width={'15%'}>Price</th>\n                <th width={'15%'} className=\"text-center\">Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            <Controller\n                control={form.control}\n                defaultValue={null}\n                name=\"products\"\n                render={\n                    ({ onChange, value, name, ref }) => {\n                        return (\n                            <>\n                                {\n                                    (value || []).map(\n                                        e => (\n                                            <tr key={e.id}>\n                                                <td>\n                                                    <img className='mr-75' src={e.image} alt='angular' height='60' width='60' />\n                                                    <span className='align-middle font-weight-bold'>\n                                                        <ProductLink data={e} />\n                                                    </span>\n                                                </td>\n                                                <td>\n                                                    <NumberInput\n                                                        disabled={disabled}\n                                                        value={ e.quantity }\n                                                        name='quantity'\n                                                        type='number'\n                                                        required\n                                                        onChange={(qty) => handleChanges(value, e.id, { name: 'quantity', value: qty}, onChange)}\n                                                    />\n                                                </td>\n                                                <td>\n                                                    <InputGroup>\n                                                        <Input\n                                                            disabled={disabled}\n                                                            value={e.price}\n                                                            name='price'\n                                                            type='number'\n                                                            step={1}\n                                                            required\n                                                            onChange={(event) => {\n                                                                handleChanges(value, e.id, event.target, onChange)\n                                                            }}\n                                                        />\n                                                        <InputGroupAddon addonType='append'>\n                                                            <InputGroupText>$</InputGroupText>\n                                                        </InputGroupAddon>\n                                                    </InputGroup>\n                                                </td>\n                                                <td className=\"text-center\">\n                                                    <Trash\n                                                        className='cursor-pointer'\n                                                        size={20}\n                                                        onClick={() => handleDelete(value, e.id, onChange)}\n                                                    />\n                                                </td>\n                                            </tr>\n                                        )\n                                    )\n                                }\n                                <tr>\n                                    <td className=\"text-center p-2\">\n                                        <AddProductForm  products={[]} onSubmit={product => handleNewProduct(value, product, onChange)}/>\n                                    </td>\n                                </tr>\n                            </>\n                        )\n                    }\n                }\n            />\n            </tbody>\n        </Table>\n    )\n\n}\nfunction AddProductForm({ products, onSubmit }) {\n    const [formModal, setFormModal] = useState(false)\n    const [data, setData] = useState(null)\n\n    const onChange = (value, { action, removedValue }) => {\n        setData(value?.item)\n    }\n\n    const handleSubmit = () => {\n        if (onSubmit && data) onSubmit(data)\n        // setFormModal(false)\n    }\n\n    const renderItem = ({ id, name, image, price, stock }) => (\n        <div className=\"d-flex justify-content-left align-items-center\">\n            <div className=\"avatar mr-50\" width=\"32\" height=\"32\">\n                <img src={image} height=\"32\" width=\"32\" />\n            </div>\n            <div className=\"d-flex flex-column\">\n                <h6 className=\"user-name text-truncate mb-0\">{ name }</h6><small\n                className=\"text-truncate text-muted mb-0\">Available Quantity: { stock }</small>\n            </div>\n        </div>\n    )\n\n    const promiseOptions = async inputValue => {\n        const data = await api.autocomplete(inputValue)\n        return data.map(({ id, name, image, price, stock, min_price, normal_price, sku }) => {\n            return {\n                label: renderItem({ id, name, image, price, stock }),\n                value: id,\n                item: { id, name, image, stock, price, min_price, normal_price, sku }\n            }\n        })\n    }\n\n    return (\n        <>\n            <PlusCircle\n                className='cursor-pointer'\n                size={22}\n                onClick={() => setFormModal(true)}\n            />\n            <Modal isOpen={formModal} toggle={() => setFormModal(!formModal)} className='modal-dialog-centered'>\n                <ModalHeader toggle={() => setFormModal(!formModal)}>Add Product</ModalHeader>\n                <ModalBody>\n                    <FormGroup>\n                        <AsyncSelect\n                            isClearable={true}\n                            className='react-select'\n                            classNamePrefix='select'\n                            loadOptions={promiseOptions}\n                            cacheOptions\n                            onChange={onChange}\n                        />\n                    </FormGroup>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color='primary' onClick={handleSubmit}>\n                        Save\n                    </Button>{' '}\n                </ModalFooter>\n            </Modal>\n        </>\n    )\n}\n","import { Col, FormGroup, Input, Label, Row } from 'reactstrap'\nimport { useEffect, useState } from 'react'\nimport AsyncSelect from 'react-select/async/dist/react-select.esm'\nimport { api } from '@data/use-user'\nimport { Controller } from 'react-hook-form'\n\nexport default function ({ form, invoice, disabled }) {\n\n\n    return (\n        <Row>\n            <Col sm='6'>\n                <FormGroup>\n                    <Label for='number'>Invoice Number</Label>\n                    <Input\n                        disabled={disabled}\n                        id='number'\n                        type='text'\n                        name=\"number\"\n                        innerRef={form.register({required: false})}\n                        invalid={form.errors.notes && true}\n                    />\n                </FormGroup>\n            </Col>\n            <Col sm='12'>\n                <FormGroup>\n                    <Label for='note'>Invoice Notes</Label>\n                    <Input\n                        disabled={disabled}\n                        id='note'\n                        type='textarea'\n                        name=\"note\"\n                        innerRef={form.register({required: false})}\n                        invalid={form.errors.notes && true}\n                    />\n                </FormGroup>\n            </Col>\n        </Row>\n    )\n}","import {\n    Card,\n    CardBody,\n    Button\n} from 'reactstrap'\nimport ProductsTable from './ProductsTable'\nimport moment from 'moment'\nimport { useEffect, useState } from 'react'\nimport {Plus, Printer, Save} from 'react-feather'\nimport { Link, useLocation } from 'react-router-dom'\nimport { getProductPrice } from \"./helpers\"\nimport InvoiceCustomer from './InvoiceCustomer'\nimport ExtraItems from './ExtraItems'\nimport InvoiceCalc from './InvoiceCalc'\nimport ability from \"../../../configs/acl/ability\"\n\nconst PreviewCard = ({ invoice, form, isCompleted }) => {\n\n    const [disabled, setDisabled] = useState(true)\n\n    const products = form.watch('products')\n    const location = useLocation()\n\n    useEffect(() => {\n        setDisabled((invoice && invoice?.status === 'COMPLETED') || isCompleted)\n    }, [invoice, products])\n\n    return (\n        <Card>\n            <CardBody className='px-2 pb-0'>\n                {/* Header */}\n                <div className='d-flex justify-content-between flex-md-row flex-column'>\n                    <div>\n                        <strong>{ invoice?.number ? `Invoice: #${invoice?.number} ` : 'New Invoice' }</strong>\n                    </div>\n                    <div>\n                        Date: <span className='invoice-number'>{moment().format('Y-MM-DD')}</span>\n                    </div>\n                </div>\n                {/* /Header */}\n            </CardBody>\n\n            <hr className='invoice-spacing'/>\n\n            {/* Address and Contact */}\n            <CardBody className='px-2 pt-0'>\n                <InvoiceCustomer form={form} invoice={invoice} disabled={isCompleted} />\n            </CardBody>\n            {/* /Address and Contact */}\n\n            {/* Products Table */}\n            <ProductsTable form={form} disabled={disabled} />\n            {/* /Products Table */}\n\n            {/* Total */}\n            <hr className='invoice-spacing' />\n\n            {/* Invoice Note */}\n            <CardBody className='invoice-padding pt-0 d-flex'>\n\n                <Button.Ripple color='secondary' type='submit' >\n                    <Save size={14} />\n                    <span className='align-middle ml-25'>Save Changes</span>\n                </Button.Ripple>\n            </CardBody>\n            {/* /Invoice Note */}\n\n        </Card>\n    )\n}\n\nexport default PreviewCard\n","import useSWR from 'swr'\nimport axios from '../utility/axiosIsntance'\n\nconst fetcher = (url) => axios.get(url).then(res => res.data?.data)\n\nexport const api = {\n\n    create: async (url, params) => {\n        const { data } = await axios.post(url, params)\n        return data?.data\n    },\n\n    update: async (url, id, params) => {\n        const { data } = await axios.put(`${url}/${id}`, params)\n        return data?.data\n    },\n\n    delete: async (url, id) => {\n        await axios.delete(`${url}/${id}`)\n    }\n}\n\nexport function model(url, id) {\n\n    const { data, mutate, error } = useSWR(`${url}/${id}`, fetcher)\n\n    const loading = !data && !error\n\n    return {\n        loading,\n        error,\n        data,\n        mutate,\n        update: async (params) => {\n            await api.update(url, id, params)\n            await mutate()\n        }\n    }\n}\n\n\nexport function models(url) {\n\n    const { data, mutate, error } = useSWR(url, fetcher, {\n        revalidateOnFocus: false,\n        revalidateOnReconnect: false,\n        refreshWhenOffline: false,\n        refreshWhenHidden: false,\n        refreshInterval: 0\n    })\n\n    const loading = !data && !error\n\n    return {\n        loading,\n        error,\n        data: data || [],\n        mutate,\n        create: async (params) => api.create(params)\n    }\n}\n\n\nexport function datatable(base, endpoint, { page, limit, search, order = {}, conditions = {} }) {\n\n    const url = `${endpoint}?page=${page}&limit=${limit}&search=${search}&order=${JSON.stringify(order)}&conditions=${JSON.stringify(conditions)}`\n\n    const { data, mutate, error } = useSWR(url, fetcher)\n\n    const loading = !data && !error\n\n    return {\n        loading,\n        error,\n        data: data?.items || [],\n        total: data?.total || 0,\n        mutate,\n        mutates: {\n            delete: async (id) => {\n                await api.delete(base, id)\n                await mutate(url)\n            }\n        }\n    }\n\n}\n\nexport function table(endpoint, { conditions }) {\n\n    const url = `${endpoint}?conditions=${JSON.stringify(conditions)}`\n\n    const { data, mutate, error } = useSWR(url, fetcher)\n\n    const loading = !data && !error\n\n    return {\n        loading,\n        error,\n        data: data?.items || [],\n        total: data?.total || 0,\n        mutate\n    }\n\n}\n","import { Row, Col, Form } from 'reactstrap'\nimport '@styles/base/pages/app-invoice.scss'\nimport { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\n\nimport { Controller, useForm } from 'react-hook-form'\nimport { useInvoice } from '@data/use-invoice'\nimport { toast } from 'react-toastify'\n\nimport InvoiceMain from '../components/InvoiceMain'\nimport InvoiceStatus from '../components/InvoiceStatus'\nimport InvoiceOptions from '../components/InvoiceOptions'\nimport ShippingStatus from '../components/ShippingStatus'\nimport InvoiceAttachments from '../components/InvoiceAttachments'\nimport ability from \"../../../configs/acl/ability\"\n\nconst fields = [\n    'number',\n    'note',\n    'products',\n    'attachments'\n]\n\nexport default function () {\n\n    const { id } = useParams()\n    const {\n        data: invoice,\n        update: updateInvoice,\n        updateStatus\n    } = useInvoice(id)\n\n    const form = useForm()\n\n    const [loaded, setLoaded] = useState(false)\n    const [isCompleted, setIsCompleted] = useState(false)\n\n    const onSubmit = async data => {\n        try {\n            data.products = data.products?.map(\n                ({ id, price, quantity }) => ({ id, price, quantity })\n            ) || []\n            await updateInvoice(data)\n            toast.success('Invoice Updated')\n        } catch (e) {\n            toast.error(e?.response?.data?.message)\n        }\n    }\n\n    useEffect(() => {\n        if (!loaded && invoice) {\n            setLoaded(true)\n            for (const field of fields) {\n                form.setValue(field, invoice[field])\n            }\n        }\n        const completed = invoice?.status === 'COMPLETED'\n        setIsCompleted(completed)\n    }, [invoice])\n\n    return (\n        <Form onSubmit={form.handleSubmit(onSubmit)}>\n            <Row>\n                <Col md={9} sm={12}>\n                    <InvoiceMain invoice={invoice} form={form} isCompleted={false}  />\n                    <Controller\n                        control={form.control}\n                        defaultValue={[]}\n                        name={'attachments'}\n                        render={({value, onChange}) => {\n                            return (\n                                <InvoiceAttachments\n                                    onChange={onChange}\n                                    files={value}\n                                />\n                            )\n                        }}\n                    />\n\n                </Col>\n                <Col md={3} sm={12}>\n                    <InvoiceStatus update={updateStatus} invoice={invoice} />\n                </Col>\n            </Row>\n        </Form>\n    )\n}","import Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\nconst MySwal = withReactContent(Swal)\n\nexport const confirm = async (callback) => {\n    MySwal.fire({\n        title: 'Are you sure?',\n        // text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, do it!',\n        customClass: {\n            confirmButton: 'btn btn-primary',\n            cancelButton: 'btn btn-outline-danger ml-1'\n        },\n        buttonsStyling: false\n    }).then(function (result) {\n        if (result.value)  callback()\n    })\n}\n\nexport const confirmDelete = async (callback) => {\n    MySwal.fire({\n        title: 'Are you sure want to delete?',\n        // text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, delete it!',\n        customClass: {\n            confirmButton: 'btn btn-danger',\n            cancelButton: 'btn btn-outline-danger ml-1'\n        },\n        buttonsStyling: false\n    }).then(function (result) {\n        if (result.value)  callback()\n    })\n}\n"],"sourceRoot":""}
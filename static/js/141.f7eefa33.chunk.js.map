{"version":3,"sources":["views/order/list/Offer.js"],"names":["canAddOrder","ability","can","breadCrumbTitle","breadCrumbActive","useDatatable","actions","initialOrder","column","dir","defaultSortField","defaultSortAsc","add","conditions","col","op","val","columns","name","selector","sortable","sortField","width","minWidth","cell","row","Number","parseFloat","total","toFixed"],"mappings":"oJAAA,mEAOe,qBACX,IAAMA,EAAcC,IAAQC,IAAI,OAAQ,aACxC,OACI,eAAC,WAAD,WACI,cAAC,IAAD,CAAaC,gBAAgB,SAASC,iBAAiB,WACvD,cAAC,IAAD,CACIC,aAAcA,IACdC,QAASA,IACTC,aAAc,CAACC,OAAQ,KAAMC,IAAK,QAClCC,iBAAkB,SAClBC,gBAAgB,EAChBC,IAAKZ,EAAc,4BAA8B,KACjDa,WAAY,CACR,CACIC,IAAK,SAAUC,GAAI,IAAKC,IAAK,WAEjC,CACIF,IAAK,uBAAwBC,GAAI,IAAKC,KAAK,IAGnDC,QAAS,CACL,CACIC,KAAM,SACNC,SAAU,SACVC,UAAU,EACVC,UAAW,MAEf,CACIH,KAAM,WACNC,SAAU,gBACVC,UAAU,EACVC,UAAW,kBAEf,CACIH,KAAM,QACNC,SAAU,iBACVE,UAAW,kBACXD,UAAU,GAEd,CACIF,KAAM,QACNC,SAAU,QACVC,UAAU,EACVE,MAAO,SAEX,CACIJ,KAAM,QACNC,SAAU,QACVC,UAAU,EACVG,SAAU,QACVC,KAAM,SAAAC,GAAG,OAAIC,OAAOC,WAAP,OAAkBF,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAKG,OAAOC,QAAQ","file":"static/js/141.f7eefa33.chunk.js","sourcesContent":["import {Fragment, useState} from 'react'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport Datatable from '@components/datatable'\nimport {useDatatable} from '@data/use-order'\nimport actions from '../actions'\nimport ability from \"../../../configs/acl/ability\"\n\nexport default () => {\n    const canAddOrder = ability.can('read', 'order_add')\n    return (\n        <Fragment>\n            <Breadcrumbs breadCrumbTitle='Orders' breadCrumbActive='Orders'/>\n            <Datatable\n                useDatatable={useDatatable}\n                actions={actions}\n                initialOrder={{column: 'id', dir: 'desc'}}\n                defaultSortField={'number'}\n                defaultSortAsc={false}\n                add={canAddOrder ? '/order/create-price-offer' : null}\n                conditions={[\n                    {\n                        col: 'status', op: '=', val: 'PENDING'\n                    },\n                    {\n                        col: 'options->price_offer', op: '=', val: true\n                    }\n                ]}\n                columns={[\n                    {\n                        name: 'Number',\n                        selector: 'number',\n                        sortable: true,\n                        sortField: 'id'\n                    },\n                    {\n                        name: 'customer',\n                        selector: 'customer.name',\n                        sortable: true,\n                        sortField: 'customer->name'\n                    },\n                    {\n                        name: 'phone',\n                        selector: 'customer.phone',\n                        sortField: 'customer->phone',\n                        sortable: true\n                    },\n                    {\n                        name: 'notes',\n                        selector: 'notes',\n                        sortable: true,\n                        width: '300px'\n                    },\n                    {\n                        name: 'Total',\n                        selector: 'total',\n                        sortable: true,\n                        minWidth: '100px',\n                        cell: row => Number.parseFloat(row?.total).toFixed(2)\n                    }\n                ]}\n            />\n        </Fragment>\n    )\n}\n"],"sourceRoot":""}